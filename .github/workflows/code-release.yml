name: Release on PR Merge

on:
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  create_release:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Zip the repository
        run: |
          cd containers/lambda/
          if ! command -v zip &> /dev/null
          then
              echo "zip command could not be found. Please install zip package."
              exit 1
          fi

          for dir in */
          do
              base=$(basename "$dir")
              version_file="${dir}version.py"

              echo "Processing directory: $base"
              echo "Version file: $version_file"

              if [ -f "$version_file" ]; then
                  version=$(grep -oP '__version__ = "\K[^\"]+' "$version_file")
                  echo "Version found: $version"
                  if [ -n "$version" ]; then
                      zip_name="${base%/}-${version}.zip"
                  else
                      zip_name="${base%/}.zip"
                  fi
              else
                  zip_name="${base%/}.zip"
              fi

              echo "Creating zip file: $zip_name"
              zip -r "$zip_name" "$dir"
          done

      - name: Install GitHub CLI
        run: |
          sudo apt update
          sudo apt install -y gh

      - name: GitHub CLI configuration
        run: echo "GH_TOKEN=${{ secrets.GITHUB_TOKEN }}" >> $GITHUB_ENV

      - name: Create release and upload zip using Python
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ls
          ls containers/lambda
          python3 create_release.py --tag_name github.event.number --pr_title github.event.pull_request.title  --pr_description github.event.pull_request.body

      - name: Upload Release Asset
        run: |
          # Assuming your lambda zip files are created beforehand
          gh release upload "$TAG_NAME" containers/lambda/*.zip
